{"version":3,"sources":["services/github.js","services/VoteCounterApi.js","components/Header.js","components/StarsChart.js","components/ForksChart.js","components/CommitsChart.js","components/IssuesChart.js","components/PullsChart.js","components/VoteTallyChart.js","components/EmailErrorComponent.js","components/SessionErrorComponent.js","components/SuccessComponent.js","services/FrameworkData.js","components/VoteForm.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["getRepoData","owner","repo","fetch","then","response","json","fetchCommitCount","COUNT_REGEX","ok","headers","get","match","groups","count","Error","status","fetchIssueCount","fetchPullCount","castNewVote","email","framework","axios","post","data","tallyVotes","votes","tallyArray","forEach","vote","tally","Header","Jumbotron","style","backgroundColor","padding","margin","className","StarsChart","console","log","this","props","repos","Card","paddingBottom","labels","map","name","datasets","label","borderColor","borderWidth","stargazers_count","options","title","display","text","fontSize","fontColor","legend","position","React","Component","ForksChart","forks_count","CommitsChart","commits","IssuesChart","issues","PullsChart","pulls","VoteTallyChart","total","EmailErrorComponent","color","SessionErrorComponent","SuccessComponent","FRAMEWORKDATA","VoteForm","state","selectedFramework","hasError","hasSuccess","handleChange","event","setState","target","value","handleSubmit","preventDefault","localStorage","getItem","hasEmailError","hasSessionError","myFormRef","reset","handleVote","setItem","catch","frameworks","onSubmit","ref","el","type","placeholder","onChange","required","fontWeight","disabled","Button","marginTop","About","href","App","useState","setRepos","setCommits","setIssues","setPulls","error","setError","setVotes","showStars","setShowStars","showForks","setShowForks","showCommits","setShowCommits","showIssues","setShowIssues","showPulls","setShowPulls","showVotes","setShowVotes","showAbout","setShowAbout","handleCloseStars","handleCloseCommits","handleCloseIssues","handleClosePulls","handleCloseVotes","useEffect","promises","Promise","all","fetchRepos","fetchBatchCommits","fetchBatchIssues","fetchBatchPulls","onClick","Modal","show","onHide","ModalBody","ModalFooter","width","Boolean","window","location","hostname","defaults","baseURL","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0f036be5.chunk.js","sourcesContent":["//straightforward using interpolation:\n//starred_count\n//forks_count\n\n//one-level deep using pagination:\n//issues\n//pulls\n//commits\n\n//two-level deep: <-----iceboxed for now\n//events\n\n//Basic repo data api calls, for stars through starred_count and forks through forks_count:\nexport function fetchRepos(repos) {\n  const promises = repos.map(getRepoData)\n  return Promise.all(promises)\n}\n\nexport const getRepoData = ({owner, repo}) => {\n  return fetch(`https://api.github.com/repos/${owner}/${repo}`)\n  .then(response => response.json())\n}\n\n//Calls using pagination to grab commits, events, issues, and pulls:\n\nexport function fetchBatchCommits(repos) {\n  const promises = repos.map(fetchCommitCount)\n  return Promise.all(promises)\n}\n\n//Commit count:\nexport const fetchCommitCount = ({owner, repo}) => {\n    const COUNT_REGEX = /(?<count>\\d+)[^,.\\d\\n]+?(?=rel=\"last\")/;\n    return fetch(`https://api.github.com/repos/${owner}/${repo}/commits?per_page=1`)\n      .then(response => {\n        if (response.ok) {\n          return response.headers\n            .get('Link')\n            .match(COUNT_REGEX)\n            .groups\n            .count\n        } else {\n          throw new Error(response.status);\n        }\n      })\n  }\n\nexport function fetchBatchIssues(repos) {\n  const promises = repos.map(fetchIssueCount)\n  return Promise.all(promises)\n}\n\n//Issue count:\nexport const fetchIssueCount = ({owner, repo}) => {\n    const COUNT_REGEX = /(?<count>\\d+)[^,.\\d\\n]+?(?=rel=\"last\")/;\n    return fetch(`https://api.github.com/repos/${owner}/${repo}/issues?per_page=1`)\n      .then(response => {\n        if (response.ok) {\n          return response.headers\n            .get('Link')\n            .match(COUNT_REGEX)\n            .groups\n            .count\n        } else {\n          throw new Error(response.status);\n        }\n      })\n  }\n\nexport function fetchBatchPulls(repos) {\n  const promises = repos.map(fetchPullCount)\n  return Promise.all(promises)\n}\n\n//Pull count:\nexport const fetchPullCount = ({owner, repo}) => {\n    const COUNT_REGEX = /(?<count>\\d+)[^,.\\d\\n]+?(?=rel=\"last\")/;\n    return fetch(`https://api.github.com/repos/${owner}/${repo}/pulls?per_page=1`)\n      .then(response => {\n        if (response.ok) {\n          return response.headers\n            .get('Link')\n            .match(COUNT_REGEX)\n            .groups\n            .count\n        } else {\n          throw new Error(response.status);\n        }\n      })\n  }\n\n//Event count:\nexport const fetchEventCount = ({owner, repo}) => {\n    const COUNT_REGEX = /(?<count>\\d+)[^,.\\d\\n]+?(?=rel=\"last\")/;\n    return fetch(`https://api.github.com/repos/${owner}/${repo}/events?per_page=1`)\n      .then(response => {\n        if (response.ok) {\n          return response.headers\n            .get('Link')\n            .match(COUNT_REGEX)\n            .groups\n            .count\n        } else {\n          throw new Error(response.status);\n        }\n      })\n  }","import axios from 'axios';\n\nexport const castNewVote = ({email, framework}) => {\n  return axios\n    .post('/api/votes', {email, framework})\n    .then(response => response.data)\n}\n\nexport const getVoteData = () => {\n  return axios('/api/votes')\n    .then(response => response.data)\n}\n\nexport const tallyVotes = (votes) => {\n  let tallyArray = \n  [{\"name\": \"ember.js\", \"total\": 0},\n  {\"name\": \"vue\", \"total\": 0},\n  {\"name\": \"angular.js\", \"total\": 0},\n  {\"name\": \"react\", \"total\": 0}]\n  votes.forEach((vote) => {\n    tallyArray.forEach((tally) => {\n      if (tally[\"name\"] === vote.framework) {\n        tally[\"total\"] = tally[\"total\"] + 1\n      }\n    });\n  })\n  return tallyArray;\n}\n\n","import React from \"react\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nexport default function Header() {\n    return (\n        <Jumbotron style={{backgroundColor: \"#000080\", padding: \"2%\",\n        margin: \"0%\"}}>\n            <h1 style={{backgroundColor: \"#000060\", padding: \"0%\",\n            margin: \"0%\"}} className=\"jumbotron\" >Indecision</h1>\n        </Jumbotron>\n    )\n}","import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport Card from 'react-bootstrap/Card';\n\nexport default class StarsChart extends React.Component {\n  render() {\n    console.log(this.props.repos)\n    return (\n      <div>\n      <Card style={{backgroundColor: \"#000058\", paddingBottom: \"2%\"}}>\n      <Doughnut\n      data={\n        {labels: this.props.repos.map(repo => repo.name),\n          datasets: [\n            {\n            label: \"API DATA\",\n            backgroundColor: [\"#0dba86\", \"#00e6e6\", \"#ff4500\", \"#e6003a\"],\n            borderColor: \"#ffff1b\",\n            borderWidth: 1,\n            data: this.props.repos.map(repo => repo.stargazers_count)\n          }\n        ]}\n      }\n          options={{\n            title:{\n              display:true,\n              text:'Stars',\n              fontSize:30,\n              fontColor:\"#ffff1b\"\n            },\n            legend:{\n              display:true,\n              position:'left'\n            }\n          }}\n          />\n        </Card>\n        </div>\n      );\n    }\n  }","import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport Card from 'react-bootstrap/Card';\n\nexport default class ForksChart extends React.Component {\n  render() {\n    console.log(this.props.repos)\n    return (\n      <div>\n        <Card style={{backgroundColor: \"#000058\", paddingBottom: \"2%\"}}>\n          <Doughnut\n          data={\n            {labels: this.props.repos.map(repo => repo.name),\n              datasets: [\n              {\n                label: \"Forks\",\n                backgroundColor: [\"#0dba86\", \"#00e6e6\", \"#ff4500\", \"#e6003a\"],\n                borderColor: \"#ffff1b\",\n                borderWidth: 1,\n                data: this.props.repos.map(repo => repo.forks_count)\n              }\n            ]}\n          }\n              options={{\n                title:{\n                  display:true,\n                  text:'Forks',\n                  fontSize:30,\n                  fontColor:\"#ffff1b\"\n                },\n                legend:{\n                  display:true,\n                  position:'left'\n                }\n              }}\n              />\n            </Card>\n        </div>\n      );\n    }\n  }","import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport Card from 'react-bootstrap/Card';\n\nexport default class CommitsChart extends React.Component {\n  render() {\n    console.log(this.props.repos)\n    return (\n      <div>\n            <Card style={{backgroundColor: \"#000058\", paddingBottom: \"2%\"}}>\n            <Doughnut\n            data={\n              {labels: this.props.repos.map(repo => repo.name),\n                datasets: [\n                {\n                  label: \"Commits\",\n                  backgroundColor: [\"#0dba86\", \"#00e6e6\", \"#ff4500\", \"#e6003a\"],\n                  borderColor: \"#ffff1b\",\n                  borderWidth: 1,\n                  data: this.props.commits\n                }\n              ]}\n            }\n                options={{\n                  title:{\n                    display:true,\n                    text:'Commits',\n                    fontSize:30,\n                    fontColor:\"#ffff1b\"\n                  },\n                  legend:{\n                    display:true,\n                    position:'left'\n                  }\n                }}\n                />\n                </Card>\n        </div>\n      );\n    }\n  }","import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport Card from 'react-bootstrap/Card';\n\nexport default class IssuesChart extends React.Component {\n  render() {\n    console.log(this.props.repos)\n    return (\n      <div>\n      <Card style={{backgroundColor: \"#000058\", paddingBottom: \"2%\"}}>\n                <Doughnut\n                data={\n                  {labels: this.props.repos.map(repo => repo.name),\n                    datasets: [\n                    {\n                      label: \"Issues\",\n                      backgroundColor: [\"#0dba86\", \"#00e6e6\", \"#ff4500\", \"#e6003a\"],\n                      borderColor: \"#ffff1b\",\n                      borderWidth: 1,\n                      data: this.props.issues\n                    }\n                  ]}\n                }\n                    options={{\n                      title:{\n                        display:true,\n                        text:'Issues',\n                        fontSize:30,\n                        fontColor:\"#ffff1b\"\n                      },\n                      legend:{\n                        display:true,\n                        position:'left'\n                      }\n                    }}\n                    />\n                </Card>\n        </div>\n      );\n    }\n  }","import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport Card from 'react-bootstrap/Card';\n\nexport default class PullsChart extends React.Component {\n  render() {\n    console.log(this.props.repos)\n    return (\n      <div>\n                <Card style={{backgroundColor: \"#000058\", paddingBottom: \"2%\"}}>\n                <Doughnut\n                data={\n                  {labels: this.props.repos.map(repo => repo.name),\n                    datasets: [\n                    {\n                      label: \"Pulls\",\n                      backgroundColor: [\"#0dba86\", \"#00e6e6\", \"#ff4500\", \"#e6003a\"],\n                      borderColor: \"#ffff1b\",\n                      borderWidth: 1,\n                      data: this.props.pulls\n                    }\n                  ]}\n                }\n                    options={{\n                      title:{\n                        display:true,\n                        text:'Pulls',\n                        fontSize:30,\n                        fontColor:\"#ffff1b\"\n                      },\n                      legend:{\n                        display:true,\n                        position:'left'\n                      }\n                    }}\n                    />\n              </Card>\n        </div>\n      );\n    }\n  }","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport { Doughnut } from 'react-chartjs-2';\nimport { tallyVotes } from '../services/VoteCounterApi';\n\n\nexport default class VoteTallyChart extends React.Component {\n  render() {\n    console.log(tallyVotes(this.props.votes))\n    return (\n      <div>\n      <Card style={{backgroundColor: \"#000058\", paddingBottom: \"2%\"}}>\n      <Doughnut\n                data={\n                  {labels: tallyVotes(this.props.votes).map(tally => tally.name),\n                    datasets: [\n                    {\n                      label: \"Votes\",\n                      backgroundColor: [\"#0dba86\", \"#00e6e6\", \"#ff4500\", \"#e6003a\"],\n                      borderColor: \"#ffff1b\",\n                      borderWidth: 1,\n                      data: tallyVotes(this.props.votes).map(tally => tally.total)\n                    }\n                  ]}\n                }\n                    options={{\n                      title:{\n                        display:true,\n                        text:'Votes',\n                        fontColor:\"#ffff1b\",\n\n                        fontSize:30,\n                      },\n                      legend:{\n                        display:true,\n                        position:'left'\n                      }\n                    }}\n                    />\n        </Card>\n        </div>\n        );\n      }}","import React from \"react\";\n\nexport default function EmailErrorComponent() {\n    return (\n        <div>\n            <h1 style={{color: \"red\"}}>Sorry, looks like there's already a vote for this email address!</h1>\n        </div>\n    )\n}","import React from \"react\";\n\nexport default function SessionErrorComponent() {\n    return (\n        <div>\n            <h1 style={{color: \"red\"}}>Sorry, looks like you already voted once this browser session!</h1>\n        </div>\n    )\n}","import React from \"react\";\n\nexport default function SuccessComponent() {\n    return (\n        <div>\n            <h1 style={{color: \"#14ff65\"}}>Vote Recorded!</h1>\n        </div>\n    )\n}","export const FRAMEWORKDATA = [\n{owner: \"vuejs\", repo: \"vue\"},\n{owner: \"facebook\", repo: \"react\"},\n{owner: \"emberjs\", repo: \"ember.js\"},\n{owner: \"angular\", repo: \"angular.js\"}\n]","import React from 'react';\nimport { castNewVote } from '../services/VoteCounterApi';\nimport EmailErrorComponent from '././EmailErrorComponent';\nimport SessionErrorComponent from '././SessionErrorComponent';\nimport SuccessComponent from '././SuccessComponent';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { FRAMEWORKDATA } from '../services/FrameworkData';\n\nexport default class VoteForm extends React.Component {\n    state = {\n      email: \"\",\n      selectedFramework: \"\",\n      hasError: false,\n      hasSuccess: false\n    }\n    handleChange = (event) => {\n      this.setState({\n        [event.target.name]: event.target.value\n      })\n    }\n\n    handleSubmit = (event) => {\n      event.preventDefault() \n      if (!localStorage.getItem('sameSession')) {\n        castNewVote({email: this.state.email, framework: this.state.selectedFramework\n        })\n        .then(() => {\n          this.props.handleVote({email: this.state.email, framework: this.state.selectedFramework})\n          this.setState({\n            email: \"\",\n            selectedFramework: \"\",\n            hasEmailError: false,\n            hasSessionError: false,\n            hasSuccess: true\n          })\n          this.myFormRef.reset()\n        })\n        .then(() => {\n          localStorage.setItem('sameSession', true)\n          console.log(localStorage)\n        })\n        .catch(() => {\n          this.setState({\n            hasEmailError: true,\n            hasSessionError: false,\n            hasSuccess: false,\n            email: \"\",\n            selectedFramework: \"\"\n          })\n          this.myFormRef.reset()\n        })\n        .then(() => {\n          console.log(this.state.hasError)\n        })\n      } else {\n        this.setState({\n            hasEmailError: false,\n            hasSessionError: true,\n            hasSuccess: false,\n            email: \"\",\n            selectedFramework: \"\"\n          })\n          this.myFormRef.reset()\n      }\n    }\n  render() {\n    console.log(this.props.frameworks, \"waffle\")\n    return (\n        <Card style={{backgroundColor: \"#000058\"}}>\n          <div className=\"card-header\">\n          Vote!\n          </div>\n          <div className=\"card-body\">\n            <form onSubmit={this.handleSubmit} ref={(el) => this.myFormRef = el}>\n              <div className=\"form-group\">\n                <h4>Enter Your Email:</h4>\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"email\"\n                  value={this.email}\n                  onChange={this.handleChange}\n                  required\n                  style={{\n                    padding: \"1%\",\n                    backgroundColor: \"#ffff1b\",\n                    color: \"#000080\", \n                    fontSize: \"20px\", \n                    fontWeight: \"bold\"\n                  }}\n                />\n              </div>\n              <h4>Choose a Framework:</h4>\n              <div>\n                <select name=\"selectedFramework\"\n                value={this.selectedFramework}\n                onChange={this.handleChange}\n                required\n                style={{\n                    padding: \"1%\"\n                  }}\n                >\n                <option value=\"\" disabled>Choose a Framework</option>\n                {FRAMEWORKDATA.map(framework => \n                  <option value={framework.repo}>{framework.repo}</option>)\n                }}\n                </select>\n              </div>\n              <div className=\"text-center\">\n                <Button \n                  className=\"btn-lg\" \n                  style={{\n                    backgroundColor: \"#ffff1b\", \n                    color: \"#000080\", \n                    fontSize: \"20px\", \n                    fontWeight: \"bold\",\n                    marginTop: \"2%\"\n                  }} \n                  type=\"submit\"\n                >\n                  Vote\n                </Button>\n              </div>\n            </form>\n          </div>\n          {this.state.hasEmailError && <EmailErrorComponent></EmailErrorComponent>}\n          {this.state.hasSessionError && <SessionErrorComponent></SessionErrorComponent>}\n          {this.state.hasSuccess && <SuccessComponent></SuccessComponent>}\n        </Card>\n      );\n    }\n  }","import React from \"react\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nexport default function About() {\n    return (\n        <Jumbotron style={{backgroundColor: \"#000080\", padding: \"2%\",\n        margin: \"0%\"}}>\n            <h1 style={{backgroundColor: \"#000060\", padding: \"0%\",\n            margin: \"0%\"}} className=\"jumbotron\">Hi there!</h1>\n            <h3>Welcome to Indecision!</h3>\n            <h5>Indecision pulls data from Github's stellar <a href=\"https://docs.github.com/en/free-pro-team@latest/rest/overview\">API</a> to compare repos for four popular frontend frameworks: <a href=\"https://github.com/vuejs/vue\">Vue</a>, <a href=\"https://github.com/facebook/react\">React</a>, <a href=\"https://github.com/angular/angular.js\">Angular</a>, and <a href=\"https://github.com/emberjs/ember.js/\">Ember</a>.</h5>\n            <h5>Check out the stats by clicking on the buttons below, and when you feel super informed, cast your totally objective vote for your fave using the handy form.</h5>\n            <h5>(NB: Only one vote per email per visit!)</h5>\n            <h5>Check out the repo for this project <a href=\"https://github.com/Jess-White/indecision\">here!</a></h5>\n        </Jumbotron>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport ModalBody from 'react-bootstrap/ModalBody';\nimport ModalFooter from 'react-bootstrap/ModalFooter';\nimport './App.css';\nimport { fetchRepos, fetchBatchCommits, fetchBatchIssues, fetchBatchPulls } from './services/github';\nimport { getVoteData } from './services/VoteCounterApi';\nimport Header from './components/Header';\nimport StarsChart from './components/StarsChart';\nimport ForksChart from './components/ForksChart';\nimport CommitsChart from './components/CommitsChart';\nimport IssuesChart from './components/IssuesChart';\nimport PullsChart from './components/PullsChart';\nimport VoteTallyChart from './components/VoteTallyChart';\nimport VoteForm from './components/VoteForm';\nimport About from './components/About';\nimport { FRAMEWORKDATA } from './services/FrameworkData';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [repos, setRepos] = useState([])\n  const [commits, setCommits] = useState([])\n  const [issues, setIssues] = useState([])\n  const [pulls, setPulls] = useState([])\n  const vote = useState({email: '', framework: ''})\n  const [error, setError] = useState(\"\")\n  const [votes, setVotes] = useState([])\n  const [showStars, setShowStars] = useState(false);\n  const [showForks, setShowForks] = useState(false);\n  const [showCommits, setShowCommits] = useState(false);\n  const [showIssues, setShowIssues] = useState(false);\n  const [showPulls, setShowPulls] = useState(false);\n  const [showVotes, setShowVotes] = useState(false);\n\n  const [showAbout, setShowAbout] = useState(false);\n\n  const handleShowStars = () => {\n    setShowForks(false)\n    setShowCommits(false)\n    setShowIssues(false)\n    setShowPulls(false)\n    setShowVotes(false)\n    setShowStars(true)\n    setShowAbout(false)\n  }\n  const handleShowForks = () => {\n    setShowStars(false)\n    setShowCommits(false)\n    setShowIssues(false)\n    setShowPulls(false)\n    setShowVotes(false)\n    setShowForks(true)\n    setShowAbout(false)\n  };\n  const handleShowCommits = () => {\n    setShowStars(false)\n    setShowForks(false)\n    setShowIssues(false)\n    setShowPulls(false)\n    setShowVotes(false)\n    setShowCommits(true)\n    setShowAbout(false)\n  };\n  const handleShowIssues = () => {\n    setShowStars(false)\n    setShowForks(false)\n    setShowCommits(false)\n    setShowPulls(false)\n    setShowVotes(false)\n    setShowIssues(true)\n    setShowAbout(false)\n  };\n  const handleShowPulls = () => {\n    setShowStars(false)\n    setShowForks(false)\n    setShowCommits(false)\n    setShowIssues(false)\n    setShowVotes(false)\n    setShowPulls(true)\n    setShowAbout(false)\n  };\n  const handleShowVotes = () => {\n    setShowStars(false)\n    setShowForks(false)\n    setShowCommits(false)\n    setShowIssues(false)\n    setShowPulls(false)\n    setShowVotes(true)\n    setShowAbout(false)\n  };\n\n  const handleShowAbout = () => {\n    setShowForks(false)\n    setShowCommits(false)\n    setShowIssues(false)\n    setShowPulls(false)\n    setShowVotes(false)\n    setShowStars(false);\n    setShowAbout(true)\n  }\n\n  const handleCloseStars = () => setShowStars(false);\n  const handleCloseForks = () => setShowForks(false);\n  const handleCloseCommits = () => setShowCommits(false);\n  const handleCloseIssues = () => setShowIssues(false);\n  const handleClosePulls = () => setShowPulls(false);\n  const handleCloseVotes = () => setShowVotes(false);\n  const handleCloseAbout = () => setShowAbout(false);\n\n  useEffect(() => {\n    fetchRepos(FRAMEWORKDATA)\n      .then(response => {\n        setRepos(response)\n      }).catch(error => {\n        setError(\"Something went wrong.\")\n      })\n    fetchBatchCommits(FRAMEWORKDATA)\n      .then(response => {\n        console.log(response)\n        setCommits(response)\n      }).catch(error => {\n        setError(\"Something went wrong.\")\n      })\n    fetchBatchIssues(FRAMEWORKDATA)\n      .then(response => {\n        console.log(response)\n        setIssues(response)\n      }).catch(error => {\n        setError(\"Something went wrong.\")\n      })\n    fetchBatchPulls(FRAMEWORKDATA)\n      .then(response => {\n        console.log(response)\n        setPulls(response)\n      }).catch(error => {\n        setError(\"Something went wrong.\")\n      })\n    getVoteData() \n      .then(response => {\n        setVotes(response)\n      }).catch(error => {\n        setError(\"Something went wrong.\")\n      })\n  }, [])\n\n  const handleVote = (vote) => {\n    setVotes([...votes, vote])\n  }\n\n  if (error) {\n    return <h1>{error}</h1>\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      \n      <Button \n        className=\"btn-lg\" \n        style={{\n          backgroundColor: \"#ffff1b\", \n          color: \"#000080\", \n          fontSize: \"20px\", \n          fontWeight: \"bold\",\n          margin: \"2%\"\n        }} \n        type=\"submit\"\n        onClick={handleShowAbout}>What is this for?\n      </Button>\n      <Modal show={showAbout} onHide={handleCloseStars}>\n      <ModalBody>\n      <About></About>\n      </ModalBody>\n        <ModalFooter>\n          <Button \n            className=\"close-btn\" \n            color=\"danger\" \n            style={{ \n              backgroundColor: \"#000080\", \n              color: \"#ffff1b\", \n              width: \"100%\"\n            }} \n            onClick={handleCloseAbout}>Close\n          </Button>\n        </ModalFooter>\n      </Modal>\n\n      <Button \n        className=\"btn-lg\" \n        style={{\n          backgroundColor: \"#ffff1b\", \n          color: \"#000080\", \n          fontSize: \"20px\", \n          fontWeight: \"bold\",\n          margin: \"2%\"\n        }} \n        type=\"submit\"\n        onClick={handleShowStars}>Stars\n      </Button>\n      <Modal show={showStars} onHide={handleCloseStars}>\n      <ModalBody>\n      <StarsChart repos={repos}/>\n      </ModalBody>\n        <ModalFooter>\n          <Button \n            className=\"close-btn\" \n            color=\"danger\" \n            style={{ \n              backgroundColor: \"#000080\", \n              color: \"#ffff1b\", \n              width: \"100%\"\n            }} \n            onClick={handleCloseStars}>Close\n          </Button>\n        </ModalFooter>\n      </Modal>\n\n      <Button \n        className=\"btn-lg\" \n        style={{\n          backgroundColor: \"#ffff1b\", \n          color: \"#000080\", \n          fontSize: \"20px\", \n          fontWeight: \"bold\",\n          margin: \"2%\"\n        }} \n        type=\"submit\"\n        onClick={handleShowForks}>Forks\n      </Button>\n\n      <Modal show={showForks} onHide={handleCloseStars}>\n      <ModalBody>\n      <ForksChart repos={repos}/>\n      </ModalBody>\n        <ModalFooter>\n          <Button \n            className=\"close-btn\" \n            color=\"danger\" \n            style={{ \n              backgroundColor: \"#000080\", \n              color: \"#ffff1b\", \n              width: \"100%\"\n            }} \n            onClick={handleCloseForks}>Close\n          </Button>\n        </ModalFooter>\n      </Modal>\n\n      <Button \n        className=\"btn-lg\" \n        style={{\n          backgroundColor: \"#ffff1b\", \n          color: \"#000080\", \n          fontSize: \"20px\", \n          fontWeight: \"bold\",\n          margin: \"2%\"\n        }} \n        type=\"submit\"\n        onClick={handleShowCommits}>Commits\n      </Button>\n      <Modal show={showCommits} onHide={handleCloseCommits}>\n      <ModalBody>\n      <CommitsChart repos={repos} commits={commits}/>\n      </ModalBody>\n        <ModalFooter>\n          <Button \n            className=\"close-btn\" \n            color=\"danger\" \n            style={{ \n              backgroundColor: \"#000080\", \n              color: \"#ffff1b\", \n              width: \"100%\"\n            }} \n            onClick={handleCloseCommits}>Close\n          </Button>\n        </ModalFooter>\n      </Modal>\n\n      <Button \n        className=\"btn-lg\" \n        style={{\n          backgroundColor: \"#ffff1b\", \n          color: \"#000080\", \n          fontSize: \"20px\", \n          fontWeight: \"bold\",\n          margin: \"2%\"\n        }} \n        type=\"submit\"\n        onClick={handleShowIssues}>Issues\n      </Button>\n      <Modal show={showIssues} onHide={handleCloseIssues}>\n      <ModalBody>\n      <IssuesChart repos={repos} issues={issues}/>\n      </ModalBody>\n        <ModalFooter>\n          <Button \n            className=\"close-btn\" \n            color=\"danger\" \n            style={{ \n              backgroundColor: \"#000080\", \n              color: \"#ffff1b\", \n              width: \"100%\"\n            }} \n            onClick={handleCloseIssues}>Close\n          </Button>\n        </ModalFooter>\n      </Modal>\n\n      <Button \n        className=\"btn-lg\" \n        style={{\n          backgroundColor: \"#ffff1b\", \n          color: \"#000080\", \n          fontSize: \"20px\", \n          fontWeight: \"bold\",\n          margin: \"2%\"\n        }} \n        type=\"submit\"\n        onClick={handleShowPulls}>Pulls\n      </Button>\n      <Modal show={showPulls} onHide={handleClosePulls}>\n      <ModalBody>\n      <PullsChart repos={repos} pulls={pulls} />\n      </ModalBody>\n        <ModalFooter>\n          <Button \n          className=\"close-btn\" \n          color=\"danger\" \n          style={{ \n            backgroundColor: \"#000080\", \n            color: \"#ffff1b\", \n            width: \"100%\"\n          }} \n            onClick={handleClosePulls}>Close\n          </Button>\n        </ModalFooter>\n      </Modal>\n\n      <VoteForm vote={vote} handleVote={handleVote} />\n\n      <Button \n        className=\"btn-lg\" \n        style={{\n          backgroundColor: \"#ffff1b\", \n          color: \"#000080\", \n          fontSize: \"20px\", \n          fontWeight: \"bold\",\n          margin: \"2%\"\n        }} \n        type=\"submit\"\n        onClick={handleShowVotes}>See How Other People Voted\n      </Button>\n      <Modal show={showVotes} onHide={handleCloseVotes}>\n      <ModalBody>\n      <VoteTallyChart votes={votes}/>\n      </ModalBody>\n        <ModalFooter>\n          <Button \n          className=\"close-btn\" \n          style={{ \n            backgroundColor: \"#000080\", \n            color: \"#ffff1b\", \n            width: \"100%\"\n          }} \n          onClick={handleCloseVotes}>Close</Button>\n        </ModalFooter>\n      </Modal>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\n\naxios.defaults.baseURL =\n  process.env.NODE_ENV === \"development\"\n ? \"http://localhost:3000\" : \"/\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}